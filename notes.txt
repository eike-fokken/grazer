TODO: Declare all classes where it is appropriate final.

TODO: Boundaryvalue maybe should hold a matrix instead of a map. (requires testing of performance)

TODO: make subproblems inherit from nodes and define connecting problems as edges. --> Problem should hold a network of subproblems.



TODO: Maybe replace new in unique_pointer with make_unique...

TODO: replace all eigen indices by long (instead of int), requires performance testing.

TODO: Validate the json!



TODO: Go back to strings in json files. DONE: topology file. Still todo: initial and boundary values.

TODO: Refactor Isothermaleulerequation into an Isentropiceulerequation template, that takes an Isentropicpressurelaw
      and a Frictionexpression template.

TODO: The current design of gas nodes is bad, think more about it.
      Let the pipes also handle the evaluation, not only the derivatives.

TODO: Change the power to make it also behave like the pipes.

TODO: 

TODO:  Review, whether parallel execution in Networkproblem is worth it and whether it produces bugs!


TODO: make a convenient way to activate sanitizers in cmake. Check out scan-build!

TODO: create a setup.json that contains delta_x and delta_t


TODO: make the writeout of data check for failures to open files. (failbit?)

Note: python xq


think about providing a -march=native target


EASY Todos:


TODO: go over the tests and use the googletest framework to deduplicate code!

TODO: Make better tests. The current tests didn't detect a raise condition, that setup cannot rely on indices of neighbouring
components to be set already.

TODO: write getters for the data members in Isothermaleulerequations and then make them private.

TODO: refactor the print_to_files function in all gas edges into Gasedge


DONE todos:


DONE: It seems to make no difference, whether we reanalyze the pattern everytime. Check this further.
      It is of little consequence, because it is one reanalyzation per time-step.
      But it is hugely beneficial to not reanalyze on every factorization in the Newton-Iteration itself.
